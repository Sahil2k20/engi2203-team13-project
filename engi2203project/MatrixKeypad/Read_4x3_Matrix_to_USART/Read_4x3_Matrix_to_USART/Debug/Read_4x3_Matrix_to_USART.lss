
Read_4x3_Matrix_to_USART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00000838  000008cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000838  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800126  00800126  000008f2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008f2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000950  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000990  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bc0  00000000  00000000  00000a00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000091a  00000000  00000000  000015c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000563  00000000  00000000  00001eda  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000009c  00000000  00000000  00002440  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000488  00000000  00000000  000024dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000028d  00000000  00000000  00002964  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  00002bf1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e3       	ldi	r30, 0x38	; 56
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 32       	cpi	r26, 0x2C	; 44
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 95 00 	call	0x12a	; 0x12a <main>
  9e:	0c 94 1a 04 	jmp	0x834	; 0x834 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <getKeyPress>:
#include <avr/io.h>
#include "4x3_Matrix.h"
 
int getKeyPress(void)
{
	PORTB |= (1<<PORTB0) | (1<<PORTB1) | (1<<PORTB2) | (1<<PORTB3); //Set Row Ports High
  a6:	85 b1       	in	r24, 0x05	; 5
  a8:	8f 60       	ori	r24, 0x0F	; 15
  aa:	85 b9       	out	0x05, r24	; 5
	PORTD &= ~(1<<PORTD5) & ~(1<<PORTD6) & ~(1<<PORTD7); //Sets Column Ports Low
  ac:	8b b1       	in	r24, 0x0b	; 11
  ae:	8f 71       	andi	r24, 0x1F	; 31
  b0:	8b b9       	out	0x0b, r24	; 11
	int c;
	int r;
	for(c = 0; c < 3; c++) //Loops Once per column
  b2:	20 e0       	ldi	r18, 0x00	; 0
  b4:	30 e0       	ldi	r19, 0x00	; 0
	{
		DDRB &= ~(0xFF); // Sets all Pins to Input
		DDRD &= ~(0xE0); //  "
		DDRD |= (0x80>>c); //sets one column to write per loop
  b6:	60 e8       	ldi	r22, 0x80	; 128
  b8:	70 e0       	ldi	r23, 0x00	; 0
	PORTD &= ~(1<<PORTD5) & ~(1<<PORTD6) & ~(1<<PORTD7); //Sets Column Ports Low
	int c;
	int r;
	for(c = 0; c < 3; c++) //Loops Once per column
	{
		DDRB &= ~(0xFF); // Sets all Pins to Input
  ba:	84 b1       	in	r24, 0x04	; 4
  bc:	14 b8       	out	0x04, r1	; 4
		DDRD &= ~(0xE0); //  "
  be:	8a b1       	in	r24, 0x0a	; 10
  c0:	8f 71       	andi	r24, 0x1F	; 31
  c2:	8a b9       	out	0x0a, r24	; 10
		DDRD |= (0x80>>c); //sets one column to write per loop
  c4:	4a b1       	in	r20, 0x0a	; 10
  c6:	cb 01       	movw	r24, r22
  c8:	02 2e       	mov	r0, r18
  ca:	02 c0       	rjmp	.+4      	; 0xd0 <getKeyPress+0x2a>
  cc:	95 95       	asr	r25
  ce:	87 95       	ror	r24
  d0:	0a 94       	dec	r0
  d2:	e2 f7       	brpl	.-8      	; 0xcc <getKeyPress+0x26>
  d4:	84 2b       	or	r24, r20
  d6:	8a b9       	out	0x0a, r24	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d8:	83 ec       	ldi	r24, 0xC3	; 195
  da:	99 e0       	ldi	r25, 0x09	; 9
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <getKeyPress+0x36>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <getKeyPress+0x3c>
  e2:	00 00       	nop
		_delay_ms(10);
		for(r = 0; r < 4; r++) // Loops once per row
		{
			if(!(PINB & (0x08>>r))) // Senses if button in current row is pressed
  e4:	1b 9b       	sbis	0x03, 3	; 3
  e6:	0f c0       	rjmp	.+30     	; 0x106 <getKeyPress+0x60>
  e8:	1a 9b       	sbis	0x03, 2	; 3
  ea:	07 c0       	rjmp	.+14     	; 0xfa <getKeyPress+0x54>
  ec:	19 9b       	sbis	0x03, 1	; 3
  ee:	08 c0       	rjmp	.+16     	; 0x100 <getKeyPress+0x5a>
  f0:	18 99       	sbic	0x03, 0	; 3
  f2:	13 c0       	rjmp	.+38     	; 0x11a <getKeyPress+0x74>
	{
		DDRB &= ~(0xFF); // Sets all Pins to Input
		DDRD &= ~(0xE0); //  "
		DDRD |= (0x80>>c); //sets one column to write per loop
		_delay_ms(10);
		for(r = 0; r < 4; r++) // Loops once per row
  f4:	83 e0       	ldi	r24, 0x03	; 3
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	08 c0       	rjmp	.+16     	; 0x10a <getKeyPress+0x64>
  fa:	81 e0       	ldi	r24, 0x01	; 1
  fc:	90 e0       	ldi	r25, 0x00	; 0
  fe:	05 c0       	rjmp	.+10     	; 0x10a <getKeyPress+0x64>
 100:	82 e0       	ldi	r24, 0x02	; 2
 102:	90 e0       	ldi	r25, 0x00	; 0
 104:	02 c0       	rjmp	.+4      	; 0x10a <getKeyPress+0x64>
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
		{
			if(!(PINB & (0x08>>r))) // Senses if button in current row is pressed
			{
				int output = (r*3+c);
 10a:	ac 01       	movw	r20, r24
 10c:	44 0f       	add	r20, r20
 10e:	55 1f       	adc	r21, r21
 110:	84 0f       	add	r24, r20
 112:	95 1f       	adc	r25, r21
 114:	82 0f       	add	r24, r18
 116:	93 1f       	adc	r25, r19
				return  output; //returns the value of the pressed button
 118:	08 95       	ret
{
	PORTB |= (1<<PORTB0) | (1<<PORTB1) | (1<<PORTB2) | (1<<PORTB3); //Set Row Ports High
	PORTD &= ~(1<<PORTD5) & ~(1<<PORTD6) & ~(1<<PORTD7); //Sets Column Ports Low
	int c;
	int r;
	for(c = 0; c < 3; c++) //Loops Once per column
 11a:	2f 5f       	subi	r18, 0xFF	; 255
 11c:	3f 4f       	sbci	r19, 0xFF	; 255
 11e:	23 30       	cpi	r18, 0x03	; 3
 120:	31 05       	cpc	r19, r1
 122:	59 f6       	brne	.-106    	; 0xba <getKeyPress+0x14>
				return  output; //returns the value of the pressed button
			}
		}
		
	}
	return 0xFF; // returns value to indicate no button pressed
 124:	8f ef       	ldi	r24, 0xFF	; 255
 126:	90 e0       	ldi	r25, 0x00	; 0
}
 128:	08 95       	ret

0000012a <main>:
#include <util/delay.h>
#include "4x3_Matrix.h"

int main(void)
{
   init_uart();
 12a:	0e 94 f8 00 	call	0x1f0	; 0x1f0 <init_uart>

   while (1)
   {
	   keypress = getKeyPress()+1;
	   if(keypress < 10){
		   printf("%d\n", keypress);
 12e:	cc e1       	ldi	r28, 0x1C	; 28
 130:	d1 e0       	ldi	r29, 0x01	; 1
   
   int keypress;

   while (1)
   {
	   keypress = getKeyPress()+1;
 132:	0e 94 53 00 	call	0xa6	; 0xa6 <getKeyPress>
 136:	01 96       	adiw	r24, 0x01	; 1
	   if(keypress < 10){
 138:	8a 30       	cpi	r24, 0x0A	; 10
 13a:	91 05       	cpc	r25, r1
 13c:	a4 f4       	brge	.+40     	; 0x166 <main+0x3c>
		   printf("%d\n", keypress);
 13e:	9f 93       	push	r25
 140:	8f 93       	push	r24
 142:	df 93       	push	r29
 144:	cf 93       	push	r28
 146:	0e 94 0c 01 	call	0x218	; 0x218 <printf>
 14a:	9f ef       	ldi	r25, 0xFF	; 255
 14c:	24 e3       	ldi	r18, 0x34	; 52
 14e:	8c e0       	ldi	r24, 0x0C	; 12
 150:	91 50       	subi	r25, 0x01	; 1
 152:	20 40       	sbci	r18, 0x00	; 0
 154:	80 40       	sbci	r24, 0x00	; 0
 156:	e1 f7       	brne	.-8      	; 0x150 <main+0x26>
 158:	00 c0       	rjmp	.+0      	; 0x15a <main+0x30>
 15a:	00 00       	nop
 15c:	0f 90       	pop	r0
 15e:	0f 90       	pop	r0
 160:	0f 90       	pop	r0
 162:	0f 90       	pop	r0
 164:	e6 cf       	rjmp	.-52     	; 0x132 <main+0x8>
		   _delay_ms(250);
	   }
	   else if(keypress == 10){
 166:	8a 30       	cpi	r24, 0x0A	; 10
 168:	91 05       	cpc	r25, r1
 16a:	71 f4       	brne	.+28     	; 0x188 <main+0x5e>
		   printf("*\n");
 16c:	80 e2       	ldi	r24, 0x20	; 32
 16e:	91 e0       	ldi	r25, 0x01	; 1
 170:	0e 94 22 01 	call	0x244	; 0x244 <puts>
 174:	9f ef       	ldi	r25, 0xFF	; 255
 176:	24 e3       	ldi	r18, 0x34	; 52
 178:	8c e0       	ldi	r24, 0x0C	; 12
 17a:	91 50       	subi	r25, 0x01	; 1
 17c:	20 40       	sbci	r18, 0x00	; 0
 17e:	80 40       	sbci	r24, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0x50>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0x5a>
 184:	00 00       	nop
 186:	d5 cf       	rjmp	.-86     	; 0x132 <main+0x8>
		   _delay_ms(250);
	   }
	   else if(keypress == 11){
 188:	8b 30       	cpi	r24, 0x0B	; 11
 18a:	91 05       	cpc	r25, r1
 18c:	71 f4       	brne	.+28     	; 0x1aa <main+0x80>
		   printf("0\n");
 18e:	82 e2       	ldi	r24, 0x22	; 34
 190:	91 e0       	ldi	r25, 0x01	; 1
 192:	0e 94 22 01 	call	0x244	; 0x244 <puts>
 196:	9f ef       	ldi	r25, 0xFF	; 255
 198:	24 e3       	ldi	r18, 0x34	; 52
 19a:	8c e0       	ldi	r24, 0x0C	; 12
 19c:	91 50       	subi	r25, 0x01	; 1
 19e:	20 40       	sbci	r18, 0x00	; 0
 1a0:	80 40       	sbci	r24, 0x00	; 0
 1a2:	e1 f7       	brne	.-8      	; 0x19c <main+0x72>
 1a4:	00 c0       	rjmp	.+0      	; 0x1a6 <main+0x7c>
 1a6:	00 00       	nop
 1a8:	c4 cf       	rjmp	.-120    	; 0x132 <main+0x8>
		   _delay_ms(250);
	   }
	   else if(keypress==12){
 1aa:	0c 97       	sbiw	r24, 0x0c	; 12
 1ac:	11 f6       	brne	.-124    	; 0x132 <main+0x8>
		   printf("#\n");
 1ae:	84 e2       	ldi	r24, 0x24	; 36
 1b0:	91 e0       	ldi	r25, 0x01	; 1
 1b2:	0e 94 22 01 	call	0x244	; 0x244 <puts>
 1b6:	9f ef       	ldi	r25, 0xFF	; 255
 1b8:	24 e3       	ldi	r18, 0x34	; 52
 1ba:	8c e0       	ldi	r24, 0x0C	; 12
 1bc:	91 50       	subi	r25, 0x01	; 1
 1be:	20 40       	sbci	r18, 0x00	; 0
 1c0:	80 40       	sbci	r24, 0x00	; 0
 1c2:	e1 f7       	brne	.-8      	; 0x1bc <main+0x92>
 1c4:	00 c0       	rjmp	.+0      	; 0x1c6 <main+0x9c>
 1c6:	00 00       	nop
 1c8:	b4 cf       	rjmp	.-152    	; 0x132 <main+0x8>

000001ca <uart_putchar>:
FILE mystdin = FDEV_SETUP_STREAM(NULL, uart_getchar, _FDEV_SETUP_READ);
/******************************************************************************
******************************************************************************/
int uart_putchar(char c, FILE *stream)
{
	loop_until_bit_is_set(UCSR0A, UDRE0);
 1ca:	e0 ec       	ldi	r30, 0xC0	; 192
 1cc:	f0 e0       	ldi	r31, 0x00	; 0
 1ce:	90 81       	ld	r25, Z
 1d0:	95 ff       	sbrs	r25, 5
 1d2:	fd cf       	rjmp	.-6      	; 0x1ce <uart_putchar+0x4>
	UDR0 = c;
 1d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 1d8:	80 e0       	ldi	r24, 0x00	; 0
 1da:	90 e0       	ldi	r25, 0x00	; 0
 1dc:	08 95       	ret

000001de <uart_getchar>:
/******************************************************************************
******************************************************************************/
int uart_getchar(FILE *stream)
{
	/* Wait until data exists. */
	loop_until_bit_is_set(UCSR0A, RXC0);
 1de:	e0 ec       	ldi	r30, 0xC0	; 192
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	88 23       	and	r24, r24
 1e6:	ec f7       	brge	.-6      	; 0x1e2 <uart_getchar+0x4>
	return UDR0;
 1e8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
 1ec:	90 e0       	ldi	r25, 0x00	; 0
 1ee:	08 95       	ret

000001f0 <init_uart>:
/******************************************************************************
******************************************************************************/
void init_uart(void)
{
	UCSR0B = (1<<RXEN0) | (1<<TXEN0);
 1f0:	88 e1       	ldi	r24, 0x18	; 24
 1f2:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UBRR0 = 103;  //With 16 MHz Crystal, 9600 baud = 103
 1f6:	87 e6       	ldi	r24, 0x67	; 103
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
 1fe:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	stdout = &mystdout;
 202:	e6 e2       	ldi	r30, 0x26	; 38
 204:	f1 e0       	ldi	r31, 0x01	; 1
 206:	8e e0       	ldi	r24, 0x0E	; 14
 208:	91 e0       	ldi	r25, 0x01	; 1
 20a:	93 83       	std	Z+3, r25	; 0x03
 20c:	82 83       	std	Z+2, r24	; 0x02
	stdin = &mystdin;
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	91 83       	std	Z+1, r25	; 0x01
 214:	80 83       	st	Z, r24
 216:	08 95       	ret

00000218 <printf>:
 218:	a0 e0       	ldi	r26, 0x00	; 0
 21a:	b0 e0       	ldi	r27, 0x00	; 0
 21c:	e2 e1       	ldi	r30, 0x12	; 18
 21e:	f1 e0       	ldi	r31, 0x01	; 1
 220:	0c 94 f3 03 	jmp	0x7e6	; 0x7e6 <__prologue_saves__+0x20>
 224:	ae 01       	movw	r20, r28
 226:	4b 5f       	subi	r20, 0xFB	; 251
 228:	5f 4f       	sbci	r21, 0xFF	; 255
 22a:	fa 01       	movw	r30, r20
 22c:	61 91       	ld	r22, Z+
 22e:	71 91       	ld	r23, Z+
 230:	af 01       	movw	r20, r30
 232:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <__data_end+0x2>
 236:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <__data_end+0x3>
 23a:	0e 94 52 01 	call	0x2a4	; 0x2a4 <vfprintf>
 23e:	e2 e0       	ldi	r30, 0x02	; 2
 240:	0c 94 0f 04 	jmp	0x81e	; 0x81e <__epilogue_restores__+0x20>

00000244 <puts>:
 244:	0f 93       	push	r16
 246:	1f 93       	push	r17
 248:	cf 93       	push	r28
 24a:	df 93       	push	r29
 24c:	e0 91 28 01 	lds	r30, 0x0128	; 0x800128 <__data_end+0x2>
 250:	f0 91 29 01 	lds	r31, 0x0129	; 0x800129 <__data_end+0x3>
 254:	23 81       	ldd	r18, Z+3	; 0x03
 256:	21 ff       	sbrs	r18, 1
 258:	1b c0       	rjmp	.+54     	; 0x290 <puts+0x4c>
 25a:	8c 01       	movw	r16, r24
 25c:	d0 e0       	ldi	r29, 0x00	; 0
 25e:	c0 e0       	ldi	r28, 0x00	; 0
 260:	f8 01       	movw	r30, r16
 262:	81 91       	ld	r24, Z+
 264:	8f 01       	movw	r16, r30
 266:	60 91 28 01 	lds	r22, 0x0128	; 0x800128 <__data_end+0x2>
 26a:	70 91 29 01 	lds	r23, 0x0129	; 0x800129 <__data_end+0x3>
 26e:	db 01       	movw	r26, r22
 270:	18 96       	adiw	r26, 0x08	; 8
 272:	ed 91       	ld	r30, X+
 274:	fc 91       	ld	r31, X
 276:	19 97       	sbiw	r26, 0x09	; 9
 278:	88 23       	and	r24, r24
 27a:	31 f0       	breq	.+12     	; 0x288 <puts+0x44>
 27c:	09 95       	icall
 27e:	89 2b       	or	r24, r25
 280:	79 f3       	breq	.-34     	; 0x260 <puts+0x1c>
 282:	df ef       	ldi	r29, 0xFF	; 255
 284:	cf ef       	ldi	r28, 0xFF	; 255
 286:	ec cf       	rjmp	.-40     	; 0x260 <puts+0x1c>
 288:	8a e0       	ldi	r24, 0x0A	; 10
 28a:	09 95       	icall
 28c:	89 2b       	or	r24, r25
 28e:	19 f0       	breq	.+6      	; 0x296 <puts+0x52>
 290:	8f ef       	ldi	r24, 0xFF	; 255
 292:	9f ef       	ldi	r25, 0xFF	; 255
 294:	02 c0       	rjmp	.+4      	; 0x29a <puts+0x56>
 296:	8d 2f       	mov	r24, r29
 298:	9c 2f       	mov	r25, r28
 29a:	df 91       	pop	r29
 29c:	cf 91       	pop	r28
 29e:	1f 91       	pop	r17
 2a0:	0f 91       	pop	r16
 2a2:	08 95       	ret

000002a4 <vfprintf>:
 2a4:	ab e0       	ldi	r26, 0x0B	; 11
 2a6:	b0 e0       	ldi	r27, 0x00	; 0
 2a8:	e8 e5       	ldi	r30, 0x58	; 88
 2aa:	f1 e0       	ldi	r31, 0x01	; 1
 2ac:	0c 94 e3 03 	jmp	0x7c6	; 0x7c6 <__prologue_saves__>
 2b0:	6c 01       	movw	r12, r24
 2b2:	7b 01       	movw	r14, r22
 2b4:	8a 01       	movw	r16, r20
 2b6:	fc 01       	movw	r30, r24
 2b8:	17 82       	std	Z+7, r1	; 0x07
 2ba:	16 82       	std	Z+6, r1	; 0x06
 2bc:	83 81       	ldd	r24, Z+3	; 0x03
 2be:	81 ff       	sbrs	r24, 1
 2c0:	cc c1       	rjmp	.+920    	; 0x65a <__LOCK_REGION_LENGTH__+0x25a>
 2c2:	ce 01       	movw	r24, r28
 2c4:	01 96       	adiw	r24, 0x01	; 1
 2c6:	3c 01       	movw	r6, r24
 2c8:	f6 01       	movw	r30, r12
 2ca:	93 81       	ldd	r25, Z+3	; 0x03
 2cc:	f7 01       	movw	r30, r14
 2ce:	93 fd       	sbrc	r25, 3
 2d0:	85 91       	lpm	r24, Z+
 2d2:	93 ff       	sbrs	r25, 3
 2d4:	81 91       	ld	r24, Z+
 2d6:	7f 01       	movw	r14, r30
 2d8:	88 23       	and	r24, r24
 2da:	09 f4       	brne	.+2      	; 0x2de <vfprintf+0x3a>
 2dc:	ba c1       	rjmp	.+884    	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 2de:	85 32       	cpi	r24, 0x25	; 37
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <vfprintf+0x4c>
 2e2:	93 fd       	sbrc	r25, 3
 2e4:	85 91       	lpm	r24, Z+
 2e6:	93 ff       	sbrs	r25, 3
 2e8:	81 91       	ld	r24, Z+
 2ea:	7f 01       	movw	r14, r30
 2ec:	85 32       	cpi	r24, 0x25	; 37
 2ee:	29 f4       	brne	.+10     	; 0x2fa <vfprintf+0x56>
 2f0:	b6 01       	movw	r22, r12
 2f2:	90 e0       	ldi	r25, 0x00	; 0
 2f4:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 2f8:	e7 cf       	rjmp	.-50     	; 0x2c8 <vfprintf+0x24>
 2fa:	91 2c       	mov	r9, r1
 2fc:	21 2c       	mov	r2, r1
 2fe:	31 2c       	mov	r3, r1
 300:	ff e1       	ldi	r31, 0x1F	; 31
 302:	f3 15       	cp	r31, r3
 304:	d8 f0       	brcs	.+54     	; 0x33c <vfprintf+0x98>
 306:	8b 32       	cpi	r24, 0x2B	; 43
 308:	79 f0       	breq	.+30     	; 0x328 <vfprintf+0x84>
 30a:	38 f4       	brcc	.+14     	; 0x31a <vfprintf+0x76>
 30c:	80 32       	cpi	r24, 0x20	; 32
 30e:	79 f0       	breq	.+30     	; 0x32e <vfprintf+0x8a>
 310:	83 32       	cpi	r24, 0x23	; 35
 312:	a1 f4       	brne	.+40     	; 0x33c <vfprintf+0x98>
 314:	23 2d       	mov	r18, r3
 316:	20 61       	ori	r18, 0x10	; 16
 318:	1d c0       	rjmp	.+58     	; 0x354 <vfprintf+0xb0>
 31a:	8d 32       	cpi	r24, 0x2D	; 45
 31c:	61 f0       	breq	.+24     	; 0x336 <vfprintf+0x92>
 31e:	80 33       	cpi	r24, 0x30	; 48
 320:	69 f4       	brne	.+26     	; 0x33c <vfprintf+0x98>
 322:	23 2d       	mov	r18, r3
 324:	21 60       	ori	r18, 0x01	; 1
 326:	16 c0       	rjmp	.+44     	; 0x354 <vfprintf+0xb0>
 328:	83 2d       	mov	r24, r3
 32a:	82 60       	ori	r24, 0x02	; 2
 32c:	38 2e       	mov	r3, r24
 32e:	e3 2d       	mov	r30, r3
 330:	e4 60       	ori	r30, 0x04	; 4
 332:	3e 2e       	mov	r3, r30
 334:	2a c0       	rjmp	.+84     	; 0x38a <vfprintf+0xe6>
 336:	f3 2d       	mov	r31, r3
 338:	f8 60       	ori	r31, 0x08	; 8
 33a:	1d c0       	rjmp	.+58     	; 0x376 <vfprintf+0xd2>
 33c:	37 fc       	sbrc	r3, 7
 33e:	2d c0       	rjmp	.+90     	; 0x39a <vfprintf+0xf6>
 340:	20 ed       	ldi	r18, 0xD0	; 208
 342:	28 0f       	add	r18, r24
 344:	2a 30       	cpi	r18, 0x0A	; 10
 346:	40 f0       	brcs	.+16     	; 0x358 <vfprintf+0xb4>
 348:	8e 32       	cpi	r24, 0x2E	; 46
 34a:	b9 f4       	brne	.+46     	; 0x37a <vfprintf+0xd6>
 34c:	36 fc       	sbrc	r3, 6
 34e:	81 c1       	rjmp	.+770    	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 350:	23 2d       	mov	r18, r3
 352:	20 64       	ori	r18, 0x40	; 64
 354:	32 2e       	mov	r3, r18
 356:	19 c0       	rjmp	.+50     	; 0x38a <vfprintf+0xe6>
 358:	36 fe       	sbrs	r3, 6
 35a:	06 c0       	rjmp	.+12     	; 0x368 <vfprintf+0xc4>
 35c:	8a e0       	ldi	r24, 0x0A	; 10
 35e:	98 9e       	mul	r9, r24
 360:	20 0d       	add	r18, r0
 362:	11 24       	eor	r1, r1
 364:	92 2e       	mov	r9, r18
 366:	11 c0       	rjmp	.+34     	; 0x38a <vfprintf+0xe6>
 368:	ea e0       	ldi	r30, 0x0A	; 10
 36a:	2e 9e       	mul	r2, r30
 36c:	20 0d       	add	r18, r0
 36e:	11 24       	eor	r1, r1
 370:	22 2e       	mov	r2, r18
 372:	f3 2d       	mov	r31, r3
 374:	f0 62       	ori	r31, 0x20	; 32
 376:	3f 2e       	mov	r3, r31
 378:	08 c0       	rjmp	.+16     	; 0x38a <vfprintf+0xe6>
 37a:	8c 36       	cpi	r24, 0x6C	; 108
 37c:	21 f4       	brne	.+8      	; 0x386 <vfprintf+0xe2>
 37e:	83 2d       	mov	r24, r3
 380:	80 68       	ori	r24, 0x80	; 128
 382:	38 2e       	mov	r3, r24
 384:	02 c0       	rjmp	.+4      	; 0x38a <vfprintf+0xe6>
 386:	88 36       	cpi	r24, 0x68	; 104
 388:	41 f4       	brne	.+16     	; 0x39a <vfprintf+0xf6>
 38a:	f7 01       	movw	r30, r14
 38c:	93 fd       	sbrc	r25, 3
 38e:	85 91       	lpm	r24, Z+
 390:	93 ff       	sbrs	r25, 3
 392:	81 91       	ld	r24, Z+
 394:	7f 01       	movw	r14, r30
 396:	81 11       	cpse	r24, r1
 398:	b3 cf       	rjmp	.-154    	; 0x300 <vfprintf+0x5c>
 39a:	98 2f       	mov	r25, r24
 39c:	9f 7d       	andi	r25, 0xDF	; 223
 39e:	95 54       	subi	r25, 0x45	; 69
 3a0:	93 30       	cpi	r25, 0x03	; 3
 3a2:	28 f4       	brcc	.+10     	; 0x3ae <vfprintf+0x10a>
 3a4:	0c 5f       	subi	r16, 0xFC	; 252
 3a6:	1f 4f       	sbci	r17, 0xFF	; 255
 3a8:	9f e3       	ldi	r25, 0x3F	; 63
 3aa:	99 83       	std	Y+1, r25	; 0x01
 3ac:	0d c0       	rjmp	.+26     	; 0x3c8 <vfprintf+0x124>
 3ae:	83 36       	cpi	r24, 0x63	; 99
 3b0:	31 f0       	breq	.+12     	; 0x3be <vfprintf+0x11a>
 3b2:	83 37       	cpi	r24, 0x73	; 115
 3b4:	71 f0       	breq	.+28     	; 0x3d2 <vfprintf+0x12e>
 3b6:	83 35       	cpi	r24, 0x53	; 83
 3b8:	09 f0       	breq	.+2      	; 0x3bc <vfprintf+0x118>
 3ba:	59 c0       	rjmp	.+178    	; 0x46e <__LOCK_REGION_LENGTH__+0x6e>
 3bc:	21 c0       	rjmp	.+66     	; 0x400 <__LOCK_REGION_LENGTH__>
 3be:	f8 01       	movw	r30, r16
 3c0:	80 81       	ld	r24, Z
 3c2:	89 83       	std	Y+1, r24	; 0x01
 3c4:	0e 5f       	subi	r16, 0xFE	; 254
 3c6:	1f 4f       	sbci	r17, 0xFF	; 255
 3c8:	88 24       	eor	r8, r8
 3ca:	83 94       	inc	r8
 3cc:	91 2c       	mov	r9, r1
 3ce:	53 01       	movw	r10, r6
 3d0:	13 c0       	rjmp	.+38     	; 0x3f8 <vfprintf+0x154>
 3d2:	28 01       	movw	r4, r16
 3d4:	f2 e0       	ldi	r31, 0x02	; 2
 3d6:	4f 0e       	add	r4, r31
 3d8:	51 1c       	adc	r5, r1
 3da:	f8 01       	movw	r30, r16
 3dc:	a0 80       	ld	r10, Z
 3de:	b1 80       	ldd	r11, Z+1	; 0x01
 3e0:	36 fe       	sbrs	r3, 6
 3e2:	03 c0       	rjmp	.+6      	; 0x3ea <vfprintf+0x146>
 3e4:	69 2d       	mov	r22, r9
 3e6:	70 e0       	ldi	r23, 0x00	; 0
 3e8:	02 c0       	rjmp	.+4      	; 0x3ee <vfprintf+0x14a>
 3ea:	6f ef       	ldi	r22, 0xFF	; 255
 3ec:	7f ef       	ldi	r23, 0xFF	; 255
 3ee:	c5 01       	movw	r24, r10
 3f0:	0e 94 3e 03 	call	0x67c	; 0x67c <strnlen>
 3f4:	4c 01       	movw	r8, r24
 3f6:	82 01       	movw	r16, r4
 3f8:	f3 2d       	mov	r31, r3
 3fa:	ff 77       	andi	r31, 0x7F	; 127
 3fc:	3f 2e       	mov	r3, r31
 3fe:	16 c0       	rjmp	.+44     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 400:	28 01       	movw	r4, r16
 402:	22 e0       	ldi	r18, 0x02	; 2
 404:	42 0e       	add	r4, r18
 406:	51 1c       	adc	r5, r1
 408:	f8 01       	movw	r30, r16
 40a:	a0 80       	ld	r10, Z
 40c:	b1 80       	ldd	r11, Z+1	; 0x01
 40e:	36 fe       	sbrs	r3, 6
 410:	03 c0       	rjmp	.+6      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 412:	69 2d       	mov	r22, r9
 414:	70 e0       	ldi	r23, 0x00	; 0
 416:	02 c0       	rjmp	.+4      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
 418:	6f ef       	ldi	r22, 0xFF	; 255
 41a:	7f ef       	ldi	r23, 0xFF	; 255
 41c:	c5 01       	movw	r24, r10
 41e:	0e 94 33 03 	call	0x666	; 0x666 <strnlen_P>
 422:	4c 01       	movw	r8, r24
 424:	f3 2d       	mov	r31, r3
 426:	f0 68       	ori	r31, 0x80	; 128
 428:	3f 2e       	mov	r3, r31
 42a:	82 01       	movw	r16, r4
 42c:	33 fc       	sbrc	r3, 3
 42e:	1b c0       	rjmp	.+54     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 430:	82 2d       	mov	r24, r2
 432:	90 e0       	ldi	r25, 0x00	; 0
 434:	88 16       	cp	r8, r24
 436:	99 06       	cpc	r9, r25
 438:	b0 f4       	brcc	.+44     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 43a:	b6 01       	movw	r22, r12
 43c:	80 e2       	ldi	r24, 0x20	; 32
 43e:	90 e0       	ldi	r25, 0x00	; 0
 440:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 444:	2a 94       	dec	r2
 446:	f4 cf       	rjmp	.-24     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 448:	f5 01       	movw	r30, r10
 44a:	37 fc       	sbrc	r3, 7
 44c:	85 91       	lpm	r24, Z+
 44e:	37 fe       	sbrs	r3, 7
 450:	81 91       	ld	r24, Z+
 452:	5f 01       	movw	r10, r30
 454:	b6 01       	movw	r22, r12
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 45c:	21 10       	cpse	r2, r1
 45e:	2a 94       	dec	r2
 460:	21 e0       	ldi	r18, 0x01	; 1
 462:	82 1a       	sub	r8, r18
 464:	91 08       	sbc	r9, r1
 466:	81 14       	cp	r8, r1
 468:	91 04       	cpc	r9, r1
 46a:	71 f7       	brne	.-36     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 46c:	e8 c0       	rjmp	.+464    	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 46e:	84 36       	cpi	r24, 0x64	; 100
 470:	11 f0       	breq	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 472:	89 36       	cpi	r24, 0x69	; 105
 474:	41 f5       	brne	.+80     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 476:	f8 01       	movw	r30, r16
 478:	37 fe       	sbrs	r3, 7
 47a:	07 c0       	rjmp	.+14     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 47c:	60 81       	ld	r22, Z
 47e:	71 81       	ldd	r23, Z+1	; 0x01
 480:	82 81       	ldd	r24, Z+2	; 0x02
 482:	93 81       	ldd	r25, Z+3	; 0x03
 484:	0c 5f       	subi	r16, 0xFC	; 252
 486:	1f 4f       	sbci	r17, 0xFF	; 255
 488:	08 c0       	rjmp	.+16     	; 0x49a <__LOCK_REGION_LENGTH__+0x9a>
 48a:	60 81       	ld	r22, Z
 48c:	71 81       	ldd	r23, Z+1	; 0x01
 48e:	07 2e       	mov	r0, r23
 490:	00 0c       	add	r0, r0
 492:	88 0b       	sbc	r24, r24
 494:	99 0b       	sbc	r25, r25
 496:	0e 5f       	subi	r16, 0xFE	; 254
 498:	1f 4f       	sbci	r17, 0xFF	; 255
 49a:	f3 2d       	mov	r31, r3
 49c:	ff 76       	andi	r31, 0x6F	; 111
 49e:	3f 2e       	mov	r3, r31
 4a0:	97 ff       	sbrs	r25, 7
 4a2:	09 c0       	rjmp	.+18     	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4a4:	90 95       	com	r25
 4a6:	80 95       	com	r24
 4a8:	70 95       	com	r23
 4aa:	61 95       	neg	r22
 4ac:	7f 4f       	sbci	r23, 0xFF	; 255
 4ae:	8f 4f       	sbci	r24, 0xFF	; 255
 4b0:	9f 4f       	sbci	r25, 0xFF	; 255
 4b2:	f0 68       	ori	r31, 0x80	; 128
 4b4:	3f 2e       	mov	r3, r31
 4b6:	2a e0       	ldi	r18, 0x0A	; 10
 4b8:	30 e0       	ldi	r19, 0x00	; 0
 4ba:	a3 01       	movw	r20, r6
 4bc:	0e 94 85 03 	call	0x70a	; 0x70a <__ultoa_invert>
 4c0:	88 2e       	mov	r8, r24
 4c2:	86 18       	sub	r8, r6
 4c4:	45 c0       	rjmp	.+138    	; 0x550 <__LOCK_REGION_LENGTH__+0x150>
 4c6:	85 37       	cpi	r24, 0x75	; 117
 4c8:	31 f4       	brne	.+12     	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4ca:	23 2d       	mov	r18, r3
 4cc:	2f 7e       	andi	r18, 0xEF	; 239
 4ce:	b2 2e       	mov	r11, r18
 4d0:	2a e0       	ldi	r18, 0x0A	; 10
 4d2:	30 e0       	ldi	r19, 0x00	; 0
 4d4:	25 c0       	rjmp	.+74     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 4d6:	93 2d       	mov	r25, r3
 4d8:	99 7f       	andi	r25, 0xF9	; 249
 4da:	b9 2e       	mov	r11, r25
 4dc:	8f 36       	cpi	r24, 0x6F	; 111
 4de:	c1 f0       	breq	.+48     	; 0x510 <__LOCK_REGION_LENGTH__+0x110>
 4e0:	18 f4       	brcc	.+6      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e2:	88 35       	cpi	r24, 0x58	; 88
 4e4:	79 f0       	breq	.+30     	; 0x504 <__LOCK_REGION_LENGTH__+0x104>
 4e6:	b5 c0       	rjmp	.+362    	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 4e8:	80 37       	cpi	r24, 0x70	; 112
 4ea:	19 f0       	breq	.+6      	; 0x4f2 <__LOCK_REGION_LENGTH__+0xf2>
 4ec:	88 37       	cpi	r24, 0x78	; 120
 4ee:	21 f0       	breq	.+8      	; 0x4f8 <__LOCK_REGION_LENGTH__+0xf8>
 4f0:	b0 c0       	rjmp	.+352    	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 4f2:	e9 2f       	mov	r30, r25
 4f4:	e0 61       	ori	r30, 0x10	; 16
 4f6:	be 2e       	mov	r11, r30
 4f8:	b4 fe       	sbrs	r11, 4
 4fa:	0d c0       	rjmp	.+26     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 4fc:	fb 2d       	mov	r31, r11
 4fe:	f4 60       	ori	r31, 0x04	; 4
 500:	bf 2e       	mov	r11, r31
 502:	09 c0       	rjmp	.+18     	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 504:	34 fe       	sbrs	r3, 4
 506:	0a c0       	rjmp	.+20     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 508:	29 2f       	mov	r18, r25
 50a:	26 60       	ori	r18, 0x06	; 6
 50c:	b2 2e       	mov	r11, r18
 50e:	06 c0       	rjmp	.+12     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
 510:	28 e0       	ldi	r18, 0x08	; 8
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	05 c0       	rjmp	.+10     	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 516:	20 e1       	ldi	r18, 0x10	; 16
 518:	30 e0       	ldi	r19, 0x00	; 0
 51a:	02 c0       	rjmp	.+4      	; 0x520 <__LOCK_REGION_LENGTH__+0x120>
 51c:	20 e1       	ldi	r18, 0x10	; 16
 51e:	32 e0       	ldi	r19, 0x02	; 2
 520:	f8 01       	movw	r30, r16
 522:	b7 fe       	sbrs	r11, 7
 524:	07 c0       	rjmp	.+14     	; 0x534 <__LOCK_REGION_LENGTH__+0x134>
 526:	60 81       	ld	r22, Z
 528:	71 81       	ldd	r23, Z+1	; 0x01
 52a:	82 81       	ldd	r24, Z+2	; 0x02
 52c:	93 81       	ldd	r25, Z+3	; 0x03
 52e:	0c 5f       	subi	r16, 0xFC	; 252
 530:	1f 4f       	sbci	r17, 0xFF	; 255
 532:	06 c0       	rjmp	.+12     	; 0x540 <__LOCK_REGION_LENGTH__+0x140>
 534:	60 81       	ld	r22, Z
 536:	71 81       	ldd	r23, Z+1	; 0x01
 538:	80 e0       	ldi	r24, 0x00	; 0
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	0e 5f       	subi	r16, 0xFE	; 254
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	a3 01       	movw	r20, r6
 542:	0e 94 85 03 	call	0x70a	; 0x70a <__ultoa_invert>
 546:	88 2e       	mov	r8, r24
 548:	86 18       	sub	r8, r6
 54a:	fb 2d       	mov	r31, r11
 54c:	ff 77       	andi	r31, 0x7F	; 127
 54e:	3f 2e       	mov	r3, r31
 550:	36 fe       	sbrs	r3, 6
 552:	0d c0       	rjmp	.+26     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 554:	23 2d       	mov	r18, r3
 556:	2e 7f       	andi	r18, 0xFE	; 254
 558:	a2 2e       	mov	r10, r18
 55a:	89 14       	cp	r8, r9
 55c:	58 f4       	brcc	.+22     	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 55e:	34 fe       	sbrs	r3, 4
 560:	0b c0       	rjmp	.+22     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 562:	32 fc       	sbrc	r3, 2
 564:	09 c0       	rjmp	.+18     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 566:	83 2d       	mov	r24, r3
 568:	8e 7e       	andi	r24, 0xEE	; 238
 56a:	a8 2e       	mov	r10, r24
 56c:	05 c0       	rjmp	.+10     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56e:	b8 2c       	mov	r11, r8
 570:	a3 2c       	mov	r10, r3
 572:	03 c0       	rjmp	.+6      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 574:	b8 2c       	mov	r11, r8
 576:	01 c0       	rjmp	.+2      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
 578:	b9 2c       	mov	r11, r9
 57a:	a4 fe       	sbrs	r10, 4
 57c:	0f c0       	rjmp	.+30     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 57e:	fe 01       	movw	r30, r28
 580:	e8 0d       	add	r30, r8
 582:	f1 1d       	adc	r31, r1
 584:	80 81       	ld	r24, Z
 586:	80 33       	cpi	r24, 0x30	; 48
 588:	21 f4       	brne	.+8      	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 58a:	9a 2d       	mov	r25, r10
 58c:	99 7e       	andi	r25, 0xE9	; 233
 58e:	a9 2e       	mov	r10, r25
 590:	09 c0       	rjmp	.+18     	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 592:	a2 fe       	sbrs	r10, 2
 594:	06 c0       	rjmp	.+12     	; 0x5a2 <__LOCK_REGION_LENGTH__+0x1a2>
 596:	b3 94       	inc	r11
 598:	b3 94       	inc	r11
 59a:	04 c0       	rjmp	.+8      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 59c:	8a 2d       	mov	r24, r10
 59e:	86 78       	andi	r24, 0x86	; 134
 5a0:	09 f0       	breq	.+2      	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>
 5a2:	b3 94       	inc	r11
 5a4:	a3 fc       	sbrc	r10, 3
 5a6:	11 c0       	rjmp	.+34     	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5a8:	a0 fe       	sbrs	r10, 0
 5aa:	06 c0       	rjmp	.+12     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5ac:	b2 14       	cp	r11, r2
 5ae:	88 f4       	brcc	.+34     	; 0x5d2 <__LOCK_REGION_LENGTH__+0x1d2>
 5b0:	28 0c       	add	r2, r8
 5b2:	92 2c       	mov	r9, r2
 5b4:	9b 18       	sub	r9, r11
 5b6:	0e c0       	rjmp	.+28     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5b8:	b2 14       	cp	r11, r2
 5ba:	60 f4       	brcc	.+24     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5bc:	b6 01       	movw	r22, r12
 5be:	80 e2       	ldi	r24, 0x20	; 32
 5c0:	90 e0       	ldi	r25, 0x00	; 0
 5c2:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 5c6:	b3 94       	inc	r11
 5c8:	f7 cf       	rjmp	.-18     	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5ca:	b2 14       	cp	r11, r2
 5cc:	18 f4       	brcc	.+6      	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5ce:	2b 18       	sub	r2, r11
 5d0:	02 c0       	rjmp	.+4      	; 0x5d6 <__LOCK_REGION_LENGTH__+0x1d6>
 5d2:	98 2c       	mov	r9, r8
 5d4:	21 2c       	mov	r2, r1
 5d6:	a4 fe       	sbrs	r10, 4
 5d8:	10 c0       	rjmp	.+32     	; 0x5fa <__LOCK_REGION_LENGTH__+0x1fa>
 5da:	b6 01       	movw	r22, r12
 5dc:	80 e3       	ldi	r24, 0x30	; 48
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 5e4:	a2 fe       	sbrs	r10, 2
 5e6:	17 c0       	rjmp	.+46     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 5e8:	a1 fc       	sbrc	r10, 1
 5ea:	03 c0       	rjmp	.+6      	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5ec:	88 e7       	ldi	r24, 0x78	; 120
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5f2:	88 e5       	ldi	r24, 0x58	; 88
 5f4:	90 e0       	ldi	r25, 0x00	; 0
 5f6:	b6 01       	movw	r22, r12
 5f8:	0c c0       	rjmp	.+24     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
 5fa:	8a 2d       	mov	r24, r10
 5fc:	86 78       	andi	r24, 0x86	; 134
 5fe:	59 f0       	breq	.+22     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 600:	a1 fe       	sbrs	r10, 1
 602:	02 c0       	rjmp	.+4      	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 604:	8b e2       	ldi	r24, 0x2B	; 43
 606:	01 c0       	rjmp	.+2      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 608:	80 e2       	ldi	r24, 0x20	; 32
 60a:	a7 fc       	sbrc	r10, 7
 60c:	8d e2       	ldi	r24, 0x2D	; 45
 60e:	b6 01       	movw	r22, r12
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 616:	89 14       	cp	r8, r9
 618:	38 f4       	brcc	.+14     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 61a:	b6 01       	movw	r22, r12
 61c:	80 e3       	ldi	r24, 0x30	; 48
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 624:	9a 94       	dec	r9
 626:	f7 cf       	rjmp	.-18     	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 628:	8a 94       	dec	r8
 62a:	f3 01       	movw	r30, r6
 62c:	e8 0d       	add	r30, r8
 62e:	f1 1d       	adc	r31, r1
 630:	80 81       	ld	r24, Z
 632:	b6 01       	movw	r22, r12
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 63a:	81 10       	cpse	r8, r1
 63c:	f5 cf       	rjmp	.-22     	; 0x628 <__LOCK_REGION_LENGTH__+0x228>
 63e:	22 20       	and	r2, r2
 640:	09 f4       	brne	.+2      	; 0x644 <__LOCK_REGION_LENGTH__+0x244>
 642:	42 ce       	rjmp	.-892    	; 0x2c8 <vfprintf+0x24>
 644:	b6 01       	movw	r22, r12
 646:	80 e2       	ldi	r24, 0x20	; 32
 648:	90 e0       	ldi	r25, 0x00	; 0
 64a:	0e 94 49 03 	call	0x692	; 0x692 <fputc>
 64e:	2a 94       	dec	r2
 650:	f6 cf       	rjmp	.-20     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 652:	f6 01       	movw	r30, r12
 654:	86 81       	ldd	r24, Z+6	; 0x06
 656:	97 81       	ldd	r25, Z+7	; 0x07
 658:	02 c0       	rjmp	.+4      	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 65a:	8f ef       	ldi	r24, 0xFF	; 255
 65c:	9f ef       	ldi	r25, 0xFF	; 255
 65e:	2b 96       	adiw	r28, 0x0b	; 11
 660:	e2 e1       	ldi	r30, 0x12	; 18
 662:	0c 94 ff 03 	jmp	0x7fe	; 0x7fe <__epilogue_restores__>

00000666 <strnlen_P>:
 666:	fc 01       	movw	r30, r24
 668:	05 90       	lpm	r0, Z+
 66a:	61 50       	subi	r22, 0x01	; 1
 66c:	70 40       	sbci	r23, 0x00	; 0
 66e:	01 10       	cpse	r0, r1
 670:	d8 f7       	brcc	.-10     	; 0x668 <strnlen_P+0x2>
 672:	80 95       	com	r24
 674:	90 95       	com	r25
 676:	8e 0f       	add	r24, r30
 678:	9f 1f       	adc	r25, r31
 67a:	08 95       	ret

0000067c <strnlen>:
 67c:	fc 01       	movw	r30, r24
 67e:	61 50       	subi	r22, 0x01	; 1
 680:	70 40       	sbci	r23, 0x00	; 0
 682:	01 90       	ld	r0, Z+
 684:	01 10       	cpse	r0, r1
 686:	d8 f7       	brcc	.-10     	; 0x67e <strnlen+0x2>
 688:	80 95       	com	r24
 68a:	90 95       	com	r25
 68c:	8e 0f       	add	r24, r30
 68e:	9f 1f       	adc	r25, r31
 690:	08 95       	ret

00000692 <fputc>:
 692:	0f 93       	push	r16
 694:	1f 93       	push	r17
 696:	cf 93       	push	r28
 698:	df 93       	push	r29
 69a:	fb 01       	movw	r30, r22
 69c:	23 81       	ldd	r18, Z+3	; 0x03
 69e:	21 fd       	sbrc	r18, 1
 6a0:	03 c0       	rjmp	.+6      	; 0x6a8 <fputc+0x16>
 6a2:	8f ef       	ldi	r24, 0xFF	; 255
 6a4:	9f ef       	ldi	r25, 0xFF	; 255
 6a6:	2c c0       	rjmp	.+88     	; 0x700 <fputc+0x6e>
 6a8:	22 ff       	sbrs	r18, 2
 6aa:	16 c0       	rjmp	.+44     	; 0x6d8 <fputc+0x46>
 6ac:	46 81       	ldd	r20, Z+6	; 0x06
 6ae:	57 81       	ldd	r21, Z+7	; 0x07
 6b0:	24 81       	ldd	r18, Z+4	; 0x04
 6b2:	35 81       	ldd	r19, Z+5	; 0x05
 6b4:	42 17       	cp	r20, r18
 6b6:	53 07       	cpc	r21, r19
 6b8:	44 f4       	brge	.+16     	; 0x6ca <fputc+0x38>
 6ba:	a0 81       	ld	r26, Z
 6bc:	b1 81       	ldd	r27, Z+1	; 0x01
 6be:	9d 01       	movw	r18, r26
 6c0:	2f 5f       	subi	r18, 0xFF	; 255
 6c2:	3f 4f       	sbci	r19, 0xFF	; 255
 6c4:	31 83       	std	Z+1, r19	; 0x01
 6c6:	20 83       	st	Z, r18
 6c8:	8c 93       	st	X, r24
 6ca:	26 81       	ldd	r18, Z+6	; 0x06
 6cc:	37 81       	ldd	r19, Z+7	; 0x07
 6ce:	2f 5f       	subi	r18, 0xFF	; 255
 6d0:	3f 4f       	sbci	r19, 0xFF	; 255
 6d2:	37 83       	std	Z+7, r19	; 0x07
 6d4:	26 83       	std	Z+6, r18	; 0x06
 6d6:	14 c0       	rjmp	.+40     	; 0x700 <fputc+0x6e>
 6d8:	8b 01       	movw	r16, r22
 6da:	ec 01       	movw	r28, r24
 6dc:	fb 01       	movw	r30, r22
 6de:	00 84       	ldd	r0, Z+8	; 0x08
 6e0:	f1 85       	ldd	r31, Z+9	; 0x09
 6e2:	e0 2d       	mov	r30, r0
 6e4:	09 95       	icall
 6e6:	89 2b       	or	r24, r25
 6e8:	e1 f6       	brne	.-72     	; 0x6a2 <fputc+0x10>
 6ea:	d8 01       	movw	r26, r16
 6ec:	16 96       	adiw	r26, 0x06	; 6
 6ee:	8d 91       	ld	r24, X+
 6f0:	9c 91       	ld	r25, X
 6f2:	17 97       	sbiw	r26, 0x07	; 7
 6f4:	01 96       	adiw	r24, 0x01	; 1
 6f6:	17 96       	adiw	r26, 0x07	; 7
 6f8:	9c 93       	st	X, r25
 6fa:	8e 93       	st	-X, r24
 6fc:	16 97       	sbiw	r26, 0x06	; 6
 6fe:	ce 01       	movw	r24, r28
 700:	df 91       	pop	r29
 702:	cf 91       	pop	r28
 704:	1f 91       	pop	r17
 706:	0f 91       	pop	r16
 708:	08 95       	ret

0000070a <__ultoa_invert>:
 70a:	fa 01       	movw	r30, r20
 70c:	aa 27       	eor	r26, r26
 70e:	28 30       	cpi	r18, 0x08	; 8
 710:	51 f1       	breq	.+84     	; 0x766 <__ultoa_invert+0x5c>
 712:	20 31       	cpi	r18, 0x10	; 16
 714:	81 f1       	breq	.+96     	; 0x776 <__ultoa_invert+0x6c>
 716:	e8 94       	clt
 718:	6f 93       	push	r22
 71a:	6e 7f       	andi	r22, 0xFE	; 254
 71c:	6e 5f       	subi	r22, 0xFE	; 254
 71e:	7f 4f       	sbci	r23, 0xFF	; 255
 720:	8f 4f       	sbci	r24, 0xFF	; 255
 722:	9f 4f       	sbci	r25, 0xFF	; 255
 724:	af 4f       	sbci	r26, 0xFF	; 255
 726:	b1 e0       	ldi	r27, 0x01	; 1
 728:	3e d0       	rcall	.+124    	; 0x7a6 <__ultoa_invert+0x9c>
 72a:	b4 e0       	ldi	r27, 0x04	; 4
 72c:	3c d0       	rcall	.+120    	; 0x7a6 <__ultoa_invert+0x9c>
 72e:	67 0f       	add	r22, r23
 730:	78 1f       	adc	r23, r24
 732:	89 1f       	adc	r24, r25
 734:	9a 1f       	adc	r25, r26
 736:	a1 1d       	adc	r26, r1
 738:	68 0f       	add	r22, r24
 73a:	79 1f       	adc	r23, r25
 73c:	8a 1f       	adc	r24, r26
 73e:	91 1d       	adc	r25, r1
 740:	a1 1d       	adc	r26, r1
 742:	6a 0f       	add	r22, r26
 744:	71 1d       	adc	r23, r1
 746:	81 1d       	adc	r24, r1
 748:	91 1d       	adc	r25, r1
 74a:	a1 1d       	adc	r26, r1
 74c:	20 d0       	rcall	.+64     	; 0x78e <__ultoa_invert+0x84>
 74e:	09 f4       	brne	.+2      	; 0x752 <__ultoa_invert+0x48>
 750:	68 94       	set
 752:	3f 91       	pop	r19
 754:	2a e0       	ldi	r18, 0x0A	; 10
 756:	26 9f       	mul	r18, r22
 758:	11 24       	eor	r1, r1
 75a:	30 19       	sub	r19, r0
 75c:	30 5d       	subi	r19, 0xD0	; 208
 75e:	31 93       	st	Z+, r19
 760:	de f6       	brtc	.-74     	; 0x718 <__ultoa_invert+0xe>
 762:	cf 01       	movw	r24, r30
 764:	08 95       	ret
 766:	46 2f       	mov	r20, r22
 768:	47 70       	andi	r20, 0x07	; 7
 76a:	40 5d       	subi	r20, 0xD0	; 208
 76c:	41 93       	st	Z+, r20
 76e:	b3 e0       	ldi	r27, 0x03	; 3
 770:	0f d0       	rcall	.+30     	; 0x790 <__ultoa_invert+0x86>
 772:	c9 f7       	brne	.-14     	; 0x766 <__ultoa_invert+0x5c>
 774:	f6 cf       	rjmp	.-20     	; 0x762 <__ultoa_invert+0x58>
 776:	46 2f       	mov	r20, r22
 778:	4f 70       	andi	r20, 0x0F	; 15
 77a:	40 5d       	subi	r20, 0xD0	; 208
 77c:	4a 33       	cpi	r20, 0x3A	; 58
 77e:	18 f0       	brcs	.+6      	; 0x786 <__ultoa_invert+0x7c>
 780:	49 5d       	subi	r20, 0xD9	; 217
 782:	31 fd       	sbrc	r19, 1
 784:	40 52       	subi	r20, 0x20	; 32
 786:	41 93       	st	Z+, r20
 788:	02 d0       	rcall	.+4      	; 0x78e <__ultoa_invert+0x84>
 78a:	a9 f7       	brne	.-22     	; 0x776 <__ultoa_invert+0x6c>
 78c:	ea cf       	rjmp	.-44     	; 0x762 <__ultoa_invert+0x58>
 78e:	b4 e0       	ldi	r27, 0x04	; 4
 790:	a6 95       	lsr	r26
 792:	97 95       	ror	r25
 794:	87 95       	ror	r24
 796:	77 95       	ror	r23
 798:	67 95       	ror	r22
 79a:	ba 95       	dec	r27
 79c:	c9 f7       	brne	.-14     	; 0x790 <__ultoa_invert+0x86>
 79e:	00 97       	sbiw	r24, 0x00	; 0
 7a0:	61 05       	cpc	r22, r1
 7a2:	71 05       	cpc	r23, r1
 7a4:	08 95       	ret
 7a6:	9b 01       	movw	r18, r22
 7a8:	ac 01       	movw	r20, r24
 7aa:	0a 2e       	mov	r0, r26
 7ac:	06 94       	lsr	r0
 7ae:	57 95       	ror	r21
 7b0:	47 95       	ror	r20
 7b2:	37 95       	ror	r19
 7b4:	27 95       	ror	r18
 7b6:	ba 95       	dec	r27
 7b8:	c9 f7       	brne	.-14     	; 0x7ac <__ultoa_invert+0xa2>
 7ba:	62 0f       	add	r22, r18
 7bc:	73 1f       	adc	r23, r19
 7be:	84 1f       	adc	r24, r20
 7c0:	95 1f       	adc	r25, r21
 7c2:	a0 1d       	adc	r26, r0
 7c4:	08 95       	ret

000007c6 <__prologue_saves__>:
 7c6:	2f 92       	push	r2
 7c8:	3f 92       	push	r3
 7ca:	4f 92       	push	r4
 7cc:	5f 92       	push	r5
 7ce:	6f 92       	push	r6
 7d0:	7f 92       	push	r7
 7d2:	8f 92       	push	r8
 7d4:	9f 92       	push	r9
 7d6:	af 92       	push	r10
 7d8:	bf 92       	push	r11
 7da:	cf 92       	push	r12
 7dc:	df 92       	push	r13
 7de:	ef 92       	push	r14
 7e0:	ff 92       	push	r15
 7e2:	0f 93       	push	r16
 7e4:	1f 93       	push	r17
 7e6:	cf 93       	push	r28
 7e8:	df 93       	push	r29
 7ea:	cd b7       	in	r28, 0x3d	; 61
 7ec:	de b7       	in	r29, 0x3e	; 62
 7ee:	ca 1b       	sub	r28, r26
 7f0:	db 0b       	sbc	r29, r27
 7f2:	0f b6       	in	r0, 0x3f	; 63
 7f4:	f8 94       	cli
 7f6:	de bf       	out	0x3e, r29	; 62
 7f8:	0f be       	out	0x3f, r0	; 63
 7fa:	cd bf       	out	0x3d, r28	; 61
 7fc:	09 94       	ijmp

000007fe <__epilogue_restores__>:
 7fe:	2a 88       	ldd	r2, Y+18	; 0x12
 800:	39 88       	ldd	r3, Y+17	; 0x11
 802:	48 88       	ldd	r4, Y+16	; 0x10
 804:	5f 84       	ldd	r5, Y+15	; 0x0f
 806:	6e 84       	ldd	r6, Y+14	; 0x0e
 808:	7d 84       	ldd	r7, Y+13	; 0x0d
 80a:	8c 84       	ldd	r8, Y+12	; 0x0c
 80c:	9b 84       	ldd	r9, Y+11	; 0x0b
 80e:	aa 84       	ldd	r10, Y+10	; 0x0a
 810:	b9 84       	ldd	r11, Y+9	; 0x09
 812:	c8 84       	ldd	r12, Y+8	; 0x08
 814:	df 80       	ldd	r13, Y+7	; 0x07
 816:	ee 80       	ldd	r14, Y+6	; 0x06
 818:	fd 80       	ldd	r15, Y+5	; 0x05
 81a:	0c 81       	ldd	r16, Y+4	; 0x04
 81c:	1b 81       	ldd	r17, Y+3	; 0x03
 81e:	aa 81       	ldd	r26, Y+2	; 0x02
 820:	b9 81       	ldd	r27, Y+1	; 0x01
 822:	ce 0f       	add	r28, r30
 824:	d1 1d       	adc	r29, r1
 826:	0f b6       	in	r0, 0x3f	; 63
 828:	f8 94       	cli
 82a:	de bf       	out	0x3e, r29	; 62
 82c:	0f be       	out	0x3f, r0	; 63
 82e:	cd bf       	out	0x3d, r28	; 61
 830:	ed 01       	movw	r28, r26
 832:	08 95       	ret

00000834 <_exit>:
 834:	f8 94       	cli

00000836 <__stop_program>:
 836:	ff cf       	rjmp	.-2      	; 0x836 <__stop_program>
